"use client";
import { saveImage } from "@/db_mongo/actions";
import { formOpenAI } from "@/types";
import { useState, useTransition } from "react";
import { useSession, signIn, signOut } from "next-auth/react";
import { match, P } from "ts-pattern";

export default function ImageGenerated({
  photo_url,
  prompt,
  user_name,
}: formOpenAI) {
  let [isPending, startTransition] = useTransition();
  const { data, status } = useSession();
  const [saved, setSaved] = useState(false);
  // const route = useRouter();

  return (
    <div className="shadow-md">
      <div className="mx-auto flex h-64 w-64 flex-col items-center justify-center rounded-lg border border-gray-300 bg-gray-50 p-3 text-sm text-gray-900 focus:border-blue-500 focus:ring-blue-500">
        <img
          placeholder="blur"
          className="h-full w-full object-contain"
          width={300}
          height={300}
          src={photo_url!}
          alt={"image generated"}
        />
        {data?.user && (
          <div className="text-center">Generated by {data?.user.name}</div>
        )}
      </div>
      <div>
        {/* <button onClick={() => downloadImage(_id, photo)}>downoald</button> */}
      </div>
      {/* if is logged the user can save the image */}
      <div className="text-center">
        {match(status)
          .with("authenticated", () =>
            saved ? (
              <div>Saved!</div>
            ) : (
              <button
                type="button"
                className="rounded-md border px-2 py-1 shadow-md active:translate-y-[1px]"
                disabled={isPending}
                onClick={() => {
                  startTransition(async () => {
                    try {
                      await saveImage({ photo_url, prompt, user_name });
                      console.log("saved!");
                      setSaved(true);
                      // route.push('/collections');
                    } catch {
                      console.log("save failed");
                    }
                  });
                }}
              >
                Save image
              </button>
            )
          )
          .with("loading", () => (
            <div className="animate-pulse">Loading....</div>
          ))
          .with("unauthenticated", () => (
            <button
              type="button"
              className="rounded-md border px-2 py-1 shadow-md active:translate-y-[1px]"
              disabled={isPending}
              onClick={() => signIn("google")}
            >
              Login to save your images
            </button>
          ))
          .exhaustive()}
      </div>
    </div>
  );
}
